#include <bits/stdc++.h>
#include <iostream>
#include <utility>
using namespace std;

struct Node{
    int data;
    Node* next;

    Node(int val){
        data = val;
        next = NULL;
    }
};

struct Node* last;

void CreateCLL( int val){
    Node* newNode = new Node(val);

    if(last == NULL){
        last = newNode;
        last->next = last;
        return ;
    }else{
       newNode->next = last->next;
       last->next = newNode;
       last = newNode;
       return;
    }



}

void InsertHead(int val){
    Node* newNode = new Node(val);
    if(last == NULL){
        last = newNode;
        last->next = last;
        return;
    }

    newNode->next = last->next;
    last->next = newNode;
    return;
}


void InsertTail(int val){
    Node* newNode =  new Node(val);
    if(last == NULL){
        last = newNode;
        last->next = newNode;
    }else{
        newNode->next = last->next;
        last->next = newNode;
        last = newNode;
    }
}

void  DeleteHead(){
    if(last == NULL){
        cout<<"Empty"<<" ";
    }

    Node* head = last->next;
    if(last == head){
        delete head;
        last = NULL;
    }else{
        last->next = head->next;
        delete head;
    }


}

void DeleteTail(){
    if(last == NULL){
        cout<<"Empty"<<" ";
        return;
    }
    Node* head = last->next;
    if(last == head){
        delete head;
        last = NULL;
    }else{
        Node* temp = head;
        while(temp->next != last){
           temp = temp->next;
        }

         temp->next = head;
         delete last;
         last = temp;
    }
}

void PrintCLL(){
    if(last == NULL){
        cout<<"Empty"<<endl;
    }
    else{
        Node* temp = last->next;
        while(temp != last){
            cout<<temp->data<<" ";
            temp = temp->next;
        }

        cout<<last->data;
    }
}

int main(){

  CreateCLL(56);
  CreateCLL(66);
  CreateCLL(76);
  CreateCLL(86);
  InsertHead(89);
  InsertTail(90);
  DeleteHead();
  DeleteTail();

  PrintCLL();
    
    return 0;
}
